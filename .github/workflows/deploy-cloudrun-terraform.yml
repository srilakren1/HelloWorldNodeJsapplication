name: "Deploy Cloud Run via Terraform"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: choice
        options: [dev, stage, prod]
        default: dev

permissions:
  id-token: write   # Required for OIDC auth
  contents: read

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
      # Step 1: Checkout code
      - name: Checkout repo
        uses: actions/checkout@v4

      # Step 2: Authenticate to Google Cloud
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: "projects/${{ vars.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/${{ vars.GCP_WIP }}/providers/${{ vars.GCP_WIP_PROVIDER }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"

      # Step 3: Setup Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      # Step 4: Terraform Init
      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      # Step 5: Terraform Validate
      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      # Step 6: Terraform Plan
      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var="environment=${{ github.event.inputs.environment }}" -out=tfplan

      # Step 7: Terraform Apply
      - name: Terraform Apply
        if: github.event.inputs.environment != 'local'
        working-directory: terraform
        run: terraform apply -auto-approve tfplan
